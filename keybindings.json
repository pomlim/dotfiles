// Place your key bindings in this file to override the defaultsauto[]
[
  {
    "key": "ctrl+c",
    "command": "workbench.action.closeQuickOpen",
    "when": "inQuickOpen"
  },
  {
    "key": "ctrl+c",
    "command": "closeReferenceSearch",
    "when": "inReferenceSearchEditor && !config.editor.stablePeek"
  },
  {
    "key": "shift+escape",
    "command": "-closeReferenceSearch",
    "when": "inReferenceSearchEditor && !config.editor.stablePeek"
  },
  {
    "key": "ctrl+c",
    "command": "closeReferenceSearch",
    "when": "referenceSearchVisible && !config.editor.stablePeek"
  },
  {
    "key": "ctrl+j",
    "command": "-workbench.action.togglePanel"
  },
  {
    "key": "ctrl+h",
    "command": "-editor.action.startFindReplaceAction",
    "when": "editorFocus || editorIsOpen"
  },
  {
    "key": "alt+h",
    "command": "workbench.action.togglePanel"
  },
  {
    "key": "ctrl+n",
    "command": "workbench.action.quickOpenSelectNext",
    "when": "inQuickOpen"
  },
  {
    "key": "ctrl+p",
    "command": "workbench.action.quickOpenSelectPrevious",
    "when": "inQuickOpen"
  },
  {
    "key": "ctrl+n",
    "command": "search.focus.nextInputBox",
    "when": "inSearchEditor && inputBoxFocus || inputBoxFocus && searchViewletVisible"
  },
  {
    "key": "ctrl+alt+[",
    "command": "workbench.action.toggleSidebarVisibility"
  },
  {
    "key": "ctrl+j",
    "command": "togglePeekWidgetFocus",
    "when": "inReferenceSearchEditor || referenceSearchVisible"
  },
  {
    "key": "ctrl+alt+]",
    "command": "search.action.collapseSearchResults"
  },
  {
    "key": "ctrl+alt+]",
    "command": "list.collapseAll",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "ctrl+f",
    "command": "-actions.find",
    "when": "editorFocus || editorIsOpen"
  },
  {
    "key": "ctrl+alt+k",
    "command": "workbench.action.moveEditorToAboveGroup"
  },
  {
    "key": "ctrl+alt+j",
    "command": "workbench.action.moveEditorToBelowGroup"
  },
  {
    "key": "ctrl+alt+h",
    "command": "workbench.action.moveEditorToLeftGroup"
  },
  {
    "key": "ctrl+alt+l",
    "command": "workbench.action.moveEditorToRightGroup"
  },
  {
    "key": "ctrl+alt+m",
    "command": "workbench.action.toggleMaximizedPanel"
  },
  {
    "key": "ctrl+f",
    "command": "-workbench.action.terminal.focusFind",
    "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "alt+enter",
    "command": "workbench.action.tasks.runTask",
    "when": "explorerViewletFocus && explorerViewletVisible && !inputFocus",
    "args": "cmd-all"
  },
  {
    "key": "ctrl+e",
    "command": "-workbench.action.quickOpen"
  },
  {
    "key": "ctrl+p",
    "command": "-workbench.action.quickOpen"
  },
  {
    "key": "alt+p",
    "command": "-togglePreserveCase",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+g",
    "command": "-workbench.action.gotoLine"
  },
  {
    "key": "ctrl+s",
    "command": "workbench.action.findInFiles",
    "when": "explorerViewletVisible || searchViewletVisible"
  },
  {
    "key": "alt+]",
    "command": "workbench.action.findInFiles"
  },
  {
    "key": "alt+]",
    "command": "workbench.action.closeSidebar",
    "when": "searchViewletVisible"
  },
  {
    "key": "ctrl+0",
    "command": "workbench.action.toggleEditorWidths"
  },
  {
    "key": "ctrl+shift+c",
    "command": "-workbench.action.terminal.openNativeConsole",
    "when": "!terminalFocus"
  },
  {
    "key": "ctrl+'",
    "command": "workbench.action.showCommands"
  },
  {
    "key": "alt+k",
    "command": "workbench.action.nextEditor"
  },
  {
    "key": "ctrl+pagedown",
    "command": "-workbench.action.nextEditor"
  },
  {
    "key": "alt+j",
    "command": "workbench.action.previousEditor"
  },
  {
    "key": "ctrl+pageup",
    "command": "-workbench.action.previousEditor"
  },
  {
    "key": "alt+l alt+o",
    "command": "-extension.liveServer.goOnline",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+alt+g",
    "command": "workbench.action.joinAllGroups"
  },
  {
    "key": "ctrl+k ctrl+right",
    "command": "-workbench.action.focusRightGroup"
  },
  {
    "key": "alt+p",
    "command": "workbench.action.showCommands"
  },
  {
    "key": "alt+l",
    "command": "workbench.action.focusNextGroup"
  },
  {
    "key": "alt+u",
    "command": "workbench.action.focusActiveEditorGroup",
  },
  {
    "key": "alt+o",
    "command": "workbench.files.action.focusFilesExplorer"
  },
  {
    "key": "ctrl+b",
    "command": "list.collapse",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "h",
    "command": "-list.collapse",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "ctrl+n",
    "command": "list.focusDown",
    "when": "notebookEditorFocused && !inputFocus"
  },
  {
    "key": "j",
    "command": "-list.focusDown",
    "when": "notebookEditorFocused && !inputFocus"
  },
  {
    "key": "ctrl+n",
    "command": "list.focusDown",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "j",
    "command": "-list.focusDown",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "g g",
    "command": "-list.focusFirst",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "shift+g",
    "command": "-list.focusLast",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "shift+alt+,",
    "command": "list.focusFirst",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "shift+alt+.",
    "command": "list.focusLast",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "ctrl+p",
    "command": "list.focusUp",
    "when": "notebookEditorFocused && !inputFocus"
  },
  {
    "key": "k",
    "command": "-list.focusUp",
    "when": "notebookEditorFocused && !inputFocus"
  },
  {
    "key": "ctrl+p",
    "command": "list.focusUp",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "k",
    "command": "-list.focusUp",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "ctrl+f",
    "command": "list.select",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "l",
    "command": "-list.select",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "ctrl+o",
    "command": "list.toggleExpand",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "o",
    "command": "-list.toggleExpand",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "ctrl+alt+e",
    "command": "workbench.files.action.focusFilesExplorer",
    "when": "viewContainer.workbench.view.explorer.enabled"
  },
  {
    "key": "ctrl+alt+s",
    "command": "workbench.view.search"
  },
  {
    "key": "ctrl+shift+j",
    "command": "workbench.action.moveEditorLeftInGroup"
  },
  {
    "key": "ctrl+shift+k",
    "command": "workbench.action.moveEditorRightInGroup"
  },
  {
    "key": "ctrl+shift+k",
    "command": "-editor.action.deleteLines",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "ctrl+shift+alt+r",
    "command": "toggleFindRegex",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+alt+w",
    "command": "toggleFindWholeWord",
    "when": "editorFocus"
  },
  {
    "key": "alt+w",
    "command": "-toggleFindWholeWord",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+9",
    "command": "editor.action.marker.nextInFiles",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+8",
    "command": "-workbench.action.focusEighthEditorGroup"
  },
  {
    "key": "ctrl+8",
    "command": "editor.action.marker.prevInFiles",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+9",
    "command": "-workbench.action.lastEditorInGroup"
  },
  /*  VSCode attempt to emulate https://github.com/terryma/vim-multiple-cursors */
  // Use built in VSCode pattern matcher for entire word search (ctrl + n)
  {
    "key": "ctrl+alt+n",
    "command": "editor.action.addSelectionToNextFindMatch",
    "when": "vim.mode == 'Visual' || !inDebugRepl && vim.mode == 'VisualBlock' || editorFocus && vim.active && vim.mode == 'Normal'"
  },

  // Skip current match (ctrl + x)
  {
    "key": "ctrl+alt+x",
    "command": "editor.action.moveSelectionToNextFindMatch",
    "when": "vim.active && editorFocus && vim.mode == 'Normal' || vim.mode == 'Visual' || vim.mode == 'VisualBlock' && !inDebugRepl"
  },

  // Go back to previous match (ctrl + p)
  {
    "key": "ctrl+alt+p",
    "command": "editor.action.moveSelectionToPreviousFindMatch",
    "when": "vim.active && editorFocus && vim.mode == 'Visual' || vim.mode == 'VisualBlock' && !inDebugRepl"
  },

  // Select all matches (ctrl + a). This is effectively the same as (ctrl + shift + l)
  {
    "key": "ctrl+alt+i",
    "command": "editor.action.selectHighlights",
    "when": "vim.active && editorFocus && vim.mode == 'Normal' || vim.mode == 'Visual' || vim.mode == 'VisualBlock' && !inDebugRepl"
  },
  {
    "key": "ctrl+shift+l",
    "command": "-editor.action.selectHighlights",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+shift+alt+n",
    "command": "workbench.action.newWindow"
  },
  {
    "key": "ctrl+shift+n",
    "command": "-workbench.action.newWindow"
  },
  {
    "key": "ctrl+shift+n",
    "command": "explorer.newFolder"
  },
  {
    "key": "ctrl+d",
    "command": "selectNextPageSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "ctrl+u",
    "command": "selectPrevPageSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "ctrl+k",
    "command": "workbench.action.quickOpenSelectPrevious"
  },
  {
    "key": "ctrl+alt+n",
    "command": "workbench.action.terminal.focusNext",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
  },
  {
    "key": "ctrl+alt+p",
    "command": "workbench.action.terminal.focusPrevious",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
  },
  {
    "key": "ctrl+alt+b",
    "command": "workbench.action.terminal.focusPreviousPane",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+alt+d",
    "command": "workbench.action.terminal.scrollDownPage",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocus && terminalProcessSupported && !terminalAltBufferActive"
  },
  {
    "key": "ctrl+alt+u",
    "command": "workbench.action.terminal.scrollUpPage",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocus && terminalProcessSupported && !terminalAltBufferActive"
  },
  {
    "key": "alt+m",
    "command": "notifications.clearAll"
  },
  {
    "key": "alt+d",
    "command": "explorer.download",
    "when": "listFocus && listSupportsFind && !inputFocus"
  },
  {
    "key": "alt+n",
    "command": "search.action.focusSearchList"
  },
  {
    "key": "alt+n",
    "command": "list.toggleSelection",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "ctrl+u",
    "command": "editor.action.pageUpHover",
    "when": "editorHoverFocused"
  },
  {
    "key": "ctrl+d",
    "command": "editor.action.pageDownHover",
    "when": "editorHoverFocused"
  },
  {
    "key": "k",
    "command": "editor.action.scrollUpHover",
    "when": "editorHoverFocused"
  },
  {
    "key": "j",
    "command": "editor.action.scrollDownHover",
    "when": "editorHoverFocused"
  },
  {
    "key": "ctrl+c",
    "command": "extension.vim_escape",
    "when": "editorHoverFocused"
  },
  {
    "key": "ctrl+j",
    "command": "workbench.action.acceptSelectedQuickOpenItem",
    "when": "inQuickOpen"
  },
  {
    "key": "alt+b",
    "command": "workbench.action.toggleSidebarVisibility"
  },
  {
    "key": "ctrl+b",
    "command": "-workbench.action.toggleSidebarVisibility"
  },
  {
    "key": "g g",
    "command": "list.focusFirst",
    "when": "listFocus && !inputFocus && !treestickyScrollFocused"
  },
  {
    "key": "shift+g",
    "command": "list.focusLast",
    "when": "listFocus && !inputFocus && !treestickyScrollFocused"
  },
  {
    "key": "/",
    "command": "list.find",
    "when": "listFocus && listSupportsFind"
  },
  {
    "key": "g i",
    "command": "list.find",
    "when": "listFocus && listSupportsFind && !inputFocus"
  },
  {
    "key": "i",
    "command": "list.triggerTypeNavigation",
    "when": "listFocus && listSupportsFind && !inputFocus"
  },
  {
    "key": "ctrl+d",
    "command": "list.focusDown",
    "when": "listFocus && listSupportsFind && !inputFocus"
  },
  {
    "key": "ctrl+u",
    "command": "list.focusUp",
    "when": "listFocus && listSupportsFind && !inputFocus"
  },
  {
    "key": "/",
    "command": "-list.toggleKeyboardNavigation",
    "when": "listFocus && listSupportsKeyboardNavigation && !inputFocus"
  },
  {
    "key": "ctrl+c",
    "command": "list.closeFind",
    "when": "listFocus && treeFindOpen"
  },
  {
    "key": "space i",
    "command": "list.closeFind",
    "when": "listFocus && treeFindOpen"
  },
  {
    "key": "alt+s",
    "command": "workbench.action.closeEditorsAndGroup"
  },
  {
    "key": "ctrl+alt+f",
    "command": "workbench.action.quickOpen"
  },
  {
    "key": "ctrl+2",
    "command": "-workbench.action.focusSecondEditorGroup"
  },
  {
    "key": "ctrl+j",
    "command": "list.closeFind",
    "when": "listFocus && treeFindOpen"
  },
  {
    "key": "tab",
    "command": "list.closeFind",
    "when": "listFocus && treeFindOpen"
  },
  {
    "key": "ctrl+n",
    "command": "-workbench.action.files.newUntitledFile"
  },
  {
    "key": "ctrl+alt+f",
    "command": "workbench.action.terminal.focusFind",
    "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocusInAny && terminalHasBeenCreated || terminalFocusInAny && terminalProcessSupported"
  },
  {
    "key": "ctrl+alt+c",
    "command": "workbench.action.terminal.hideFind",
    "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocusInAny && terminalHasBeenCreated || terminalFocusInAny && terminalProcessSupported"
  },
  {
    "key": "ctrl+f",
    "command": "-workbench.action.terminal.focusFind",
    "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocusInAny && terminalHasBeenCreated || terminalFocusInAny && terminalProcessSupported"
  },
  {
    "key": "ctrl+alt+j",
    "command": "workbench.action.terminal.scrollDown",
    "when": "terminalFocusInAny && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocusInAny && terminalProcessSupported && !terminalAltBufferActive"
  },
  {
    "key": "ctrl+alt+k",
    "command": "workbench.action.terminal.scrollUp",
    "when": "terminalFocusInAny && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocusInAny && terminalProcessSupported && !terminalAltBufferActive"
  },
  {
    "key": "j",
    "command": "list.focusDown",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "k",
    "command": "list.focusUp",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "alt+\\",
    "command": "workbench.action.terminal.split",
    "when": "terminalFocus && terminalProcessSupported || terminalFocus && terminalWebExtensionContributedProfile"
  },
  {
    "key": "ctrl+alt+\\",
    "command": "workbench.action.terminal.unsplit"
  },
  {
    "key": "space",
    "command": "-list.stickyScrolltoggleExpand",
    "when": "treestickyScrollFocused"
  },
  {
    "key": "space",
    "command": "-list.toggleExpand",
    "when": "listFocus && !inputFocus && !treestickyScrollFocused"
  },
  {
    "key": "space h",
    "command": "workbench.action.focusActiveEditorGroup",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "ctrl+alt+w",
    "command": "notebook.execute"
  },
  {
    "key": "ctrl+alt+-",
    "command": "notebook.cell.insertCodeCellBelow"
  },
  {
    "key": "ctrl+g",
    "command": "notebook.cell.quitEdit",
    "when": "inputFocus && notebookEditorFocused && !editorHasMultipleSelections && !editorHasSelection && !editorHoverVisible"
  },
  {
    "key": "ctrl+g",
    "command": "notebook.cell.edit",
    "when": "notebookCellListFocused && notebookEditable && !editorHoverFocused && !inputFocus"
  },
  {
    "key": "g g",
    "command": "notebook.focusTop",
    "when": "notebookEditorFocused && !inputFocus"
  },
  {
    "key": "shift+g",
    "command": "notebook.focusBottom",
    "when": "notebookEditorFocused && !inputFocus"
  },
  {
    "key": "alt+enter",
    "command": "-notebook.cell.executeAndInsertBelow",
    "when": "notebookCellListFocused && notebookCellType == 'markup' || notebookCellListFocused && notebookMissingKernelExtension && !notebookCellExecuting && notebookCellType == 'code' || notebookCellListFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelCount > 0 || notebookCellListFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelSourceCount > 0"
  },
  {
    "key": "alt+enter",
    "command": "notebook.cell.executeCellAndBelow"
  },
  {
    "key": "ctrl+j",
    "command": "notebook.cell.execute",
    "when": "inputFocus && notebookEditorFocused && vim.active && !editorHasSelection && !editorHoverVisible && vim.mode == 'Normal'"
  },
  {
    "key": "alt+a",
    "command": "notebook.cell.execute",
    "when": "inputFocus && notebookEditorFocused && vim.active && !editorHasSelection && !editorHoverVisible && vim.mode == 'Normal'"
  },
  {
    "key": "ctrl+alt+j",
    "command": "notebook.cell.executeCellAndBelow",
    "when": "inputFocus && notebookEditorFocused && vim.active && !editorHasSelection && !editorHoverVisible && vim.mode == 'Normal'"
  },
  {
    "key": "ctrl+f",
    "command": "-list.find",
    "when": "listFocus && listSupportsFind"
  },
  {
    "key": "space /",
    "command": "list.closeFind",
    "when": "listFocus && treeFindOpen"
  },
  {
    "key": "space t",
    "command": "timeline.toggleVisibility",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "space b",
    "command": "workbench.explorer.openEditorsView.toggleVisibility",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "space k",
    "command": "workbench.files.action.focusFilesExplorer",
    "when": "focusedView == 'timeline'"
  },
  {
    "key": "space j",
    "command": "workbench.files.action.focusFilesExplorer",
    "when": "openEditorsFocus"
  },
  {
    "key": "space j",
    "command": "timeline.focus",
    "when": "filesExplorerFocus"
  },
  {
    "key": "space k",
    "command": "workbench.files.action.focusOpenEditorsView",
    "when": "explorerViewletFocus"
  },
  {
    "key": "ctrl+alt+o",
    "command": "-workbench.action.remote.showMenu"
  },
  {
    "key": "o",
    "command": "list.toggleExpand",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "ctrl+alt+o",
    "command": "explorer.openToSide",
    "when": "explorerViewletFocus && foldersViewVisible && !inputFocus"
  },
  {
    "key": "ctrl+2",
    "command": "workbench.action.togglePanel",
    "when": "terminal.active"
  },
  {
    "key": "ctrl+alt+v",
    "command": "workbench.action.terminal.paste",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+v",
    "command": "-workbench.action.terminal.paste",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+alt+v",
    "command": "-workbench.action.editorDictation.start",
    "when": "hasSpeechProvider && !editorDictation.inProgress && !editorReadonly"
  },
  {
    "key": "ctrl+alt+q",
    "command": "workbench.action.terminal.toggleTerminal",
    "when": "terminal.active"
  },
  {
    "key": "shift+alt+n",
    "command": "welcome.showNewFileEntries"
  },
  {
    "key": "alt+i",
    "command": "terminal.focus",
  },
  {
    "key": "ctrl+alt+1",
    "command": "workbench.action.focusFirstEditorGroup"
  },
  {
    "key": "ctrl+alt+'",
    "command": "workbench.action.terminal.new",
    "when": "terminalProcessSupported || terminalWebExtensionContributedProfile"
  },
  {
    "key": "alt+[",
    "command": "workbench.action.closeSidebar"
  },
  {
    "key": "ctrl+alt+c",
    "command": "editor.action.commentLine",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+b",
    "command": "extension.vim_left",
    "when": "editorTextFocus && vim.active && vim.mode == 'Insert' && !inDebugRepl"
  },
  {
    "key": "ctrl+f",
    "command": "extension.vim_right",
    "when": "editorTextFocus && vim.active && vim.mode == 'Insert' && !inDebugRepl"
  },
  {
    "key": "ctrl+e",
    "command": "cursorEnd",
    "when": "editorTextFocus && vim.active && vim.mode == 'Insert' && !inDebugRepl"
  },
  {
    "key": "ctrl+a",
    "command": "cursorHome",
    "when": "editorTextFocus && vim.active && vim.mode == 'Insert' && !inDebugRepl"
  },
  {
    "key": "alt+d",
    "command": "deleteWordRight",
    "when": "editorTextFocus && vim.active && vim.mode == 'Insert' && !inDebugRepl"
  },
  {
    "key": "ctrl+alt+d",
    "command": "deleteRight",
    "when": "editorTextFocus && vim.active && vim.mode == 'Insert' && !inDebugRepl"
  },
  {
    "key": "alt+f",
    "command": "cursorWordRight",
    "when": "editorTextFocus && vim.active && vim.mode == 'Insert' && !inDebugRepl"
  },
  {
    "key": "alt+b",
    "command": "cursorWordLeft",
    "when": "editorTextFocus && vim.active && vim.mode == 'Insert' && !inDebugRepl"
  },
  {
    "key": "ctrl+n",
    "command": "cursorDown",
    "when": "editorTextFocus && vim.active && vim.mode == 'Insert' && !inDebugRepl && !suggestWidgetVisible"
  },
  {
    "key": "ctrl+p",
    "command": "cursorUp",
    "when": "editorTextFocus && vim.active && vim.mode == 'Insert' && !inDebugRepl && !suggestWidgetVisible"
  },
  {
    "key": "ctrl+k",
    "command": "deleteAllRight",
    "when": "editorTextFocus && vim.active && vim.mode == 'Insert' && !inDebugRepl "
  },
  {
    "key": "tab",
    "command": "extension.vim_ctrl+j",
    "when": "editorTextFocus && vim.active && vim.mode == 'SearchInProgressMode' && !inDebugRepl"
  },
  {
    "key": "r",
    "command": "workbench.files.action.refreshFilesExplorer",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "shift+r",
    "command": "renameFile",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "f",
    "command": "explorer.newFile",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "shift+d",
    "command": "deleteFile",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "d",
    "command": "explorer.newFolder",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "alt+shift+d",
    "command": "cursorPageDown",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "alt+shift+u",
    "command": "cursorPageUp",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "command": "runCommands",
    "key": "ctrl+d",
    "args": {
      "commands": [
        "workbench.action.quickOpenSelectNext",
        "workbench.action.quickOpenSelectNext",
        "workbench.action.quickOpenSelectNext",
        "workbench.action.quickOpenSelectNext",
        "workbench.action.quickOpenSelectNext"
      ]
    },
    "when": "inQuickOpen"
  },
  {
    "command": "runCommands",
    "key": "ctrl+u",
    "args": {
      "commands": [
        "workbench.action.quickOpenSelectPrevious",
        "workbench.action.quickOpenSelectPrevious",
        "workbench.action.quickOpenSelectPrevious",
        "workbench.action.quickOpenSelectPrevious",
        "workbench.action.quickOpenSelectPrevious"
      ]
    },
    "when": "inQuickOpen"
  },
  {
    "key": "shift+alt+v",
    "command": "toggleVim"
  },
  {
    "key": "ctrl+l",
    "command": "-expandLineSelection",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+r",
    "command": "-workbench.action.terminal.runRecentCommand",
    "when": "accessibilityModeEnabled && terminalFocus && terminalHasBeenCreated || accessibilityModeEnabled && terminalFocus && terminalProcessSupported || accessibilityModeEnabled && accessibleViewIsShown && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal' || accessibilityModeEnabled && accessibleViewIsShown && terminalProcessSupported && accessibleViewCurrentProviderId == 'terminal'"
  },
  {
    "key": "ctrl+alt+r",
    "command": "vscode-postgres.refresh"
  },
  {
    "key": "alt+q",
    "command": "workbench.action.toggleEditorWidths"
  },
  {
    "key": "alt+d",
    "command": "workbench.action.navigateBack",
    "when": "editorFocus && vim.active && vim.mode == 'Normal'"
  },
  {
    "key": "alt+f",
    "command": "workbench.action.navigateForward",
    "when": "editorFocus && vim.active && vim.mode == 'Normal'"
  },
  {
    "key": "ctrl+alt+oem_period",
    "command": "workbench.action.terminal.resizePaneDown"
  },
  {
    "key": "ctrl+alt+,",
    "command": "workbench.action.terminal.resizePaneUp"
  },
  {
    "key": "alt+.",
    "command": "workbench.action.increaseViewSize"
  },
  {
    "key": "alt+,",
    "command": "workbench.action.decreaseViewSize"
  },
  {
    "key": "ctrl+d",
    "command": "workbench.files.action.focusFilesExplorer",
    "when": "inputFocus && treeFindOpen"
  },
  {
    "key": "ctrl+j",
    "command": "workbench.view.explorer",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && inputFocus"
  },
  {
    "key": "ctrl+alt+u",
    "command": "list.focusPageUp",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "alt+v",
    "command": "list.focusPageUp",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "ctrl+u",
    "command": "-list.focusPageUp",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "ctrl+alt+d",
    "command": "list.focusPageDown",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "ctrl+d",
    "command": "-list.focusPageDown",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "ctrl+alt+v",
    "command": "filesExplorer.paste",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "ctrl+v",
    "command": "-filesExplorer.paste",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "ctrl+d",
    "command": "runCommands",
    "args": {
      "commands": [
        "list.focusDown",
        "list.focusDown",
        "list.focusDown",
        "list.focusDown",
        "list.focusDown",
        "list.focusDown",
        "list.focusDown"
      ]
    },
    "when": "listFocus && !inputFocus && !treeFindOpen"
  },
  {
    "key": "ctrl+u",
    "command": "runCommands",
    "args": {
      "commands": [
        "list.focusUp",
        "list.focusUp",
        "list.focusUp",
        "list.focusUp",
        "list.focusUp",
        "list.focusUp",
        "list.focusUp"
      ]
    },
    "when": "listFocus && !inputFocus && !treeFindOpen"
  },
  {
    "key": "ctrl+g",
    "command": "hideSuggestWidget",
    "when": "suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "ctrl+g",
    "command": "closeParameterHints",
    "when": "editorFocus && parameterHintsVisible"
  },
  {
    "key": "ctrl+.",
    "command": "showNextParameterHint",
    "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
  },
  {
    "key": "ctrl+,",
    "command": "showPrevParameterHint",
    "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
  },
  {
    "key": "ctrl+alt+a",
    "command": "workbench.action.toggleMaximizedPanel",
    "when": "terminalFocusInAny && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocusInAny && terminalProcessSupported && !terminalAltBufferActive"
  },
  {
    "key": "ctrl+q",
    "command": "workbench.action.focusActiveEditorGroup",
    "when": "terminalFocusInAny && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocusInAny && terminalProcessSupported && !terminalAltBufferActive"
  },
  {
    "key": "alt+c",
    "command": "editor.action.clipboardCopyAction"
  },
  {
    "key": "ctrl+shift+\\",
    "command": "-workbench.action.terminal.focusTabs",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported || terminalHasBeenCreated && terminalTabsFocus || terminalProcessSupported && terminalTabsFocus"
  },
  {
    "key": "ctrl+shift+\\",
    "command": "workbench.action.terminal.join",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported || terminalHasBeenCreated && terminalTabsFocus || terminalProcessSupported && terminalTabsFocus"
  },
  {
    "key": "ctrl+shift+-",
    "command": "-notebook.cell.split",
    "when": "editorTextFocus && inputFocus && notebookEditorFocused && !notebookOutputInputFocused"
  },
  {
    "key": "ctrl+shift+-",
    "command": "notebook.cell.insertMarkdownCellAbove",
    "when": "editorTextFocus && inputFocus && notebookEditorFocused && !notebookOutputInputFocused"
  }
]